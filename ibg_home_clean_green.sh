#!/usr/bin/env bash
set -euo pipefail

echo "üßº IBG HOME: limpiar consola (env.js sin export + sin 404 decorativos) y deploy"

# 0) Reescribe env.js en la RA√çZ (sin 'export', con tus variables exactas por nombre)
mkdir -p tools
cat > tools/build-env.sh <<'BASH'
#!/usr/bin/env bash
set -euo pipefail
ROOT_DIR="$(cd "$(dirname "$0")/.." && pwd)"

# Variables tal cual en Vercel (si alguna no existe, queda vac√≠a)
: "${PAYPAL_CLIENT_ID:=}"
: "${PAYPAL_SECRET:=}"
: "${PAYPAL_PLAN_MONTHLY_1499:=}"
: "${PAYPAL_PLAN_ANNUAL_4999:=}"
: "${PAYPAL_WEBHOOK_ID:=}"
: "${CRISP_WEBSITE_ID:=}"
: "${EXOCLICK_ZONE:=}"
: "${JUICYADS_ZONE:=}"
: "${EROADVERTISING_ZONE:=}"
: "${EXOCLICK_SNIPPET_B64:=}"
: "${JUICYADS_SNIPPET_B64:=}"
: "${EROADVERTISING_SNIPPET_B64:=}"
: "${POPADS_SITE_ID:=}"
: "${POPADS_ENABLE:=0}"
: "${IBG_ASSETS_BASE_URL:=}"

cat > "$ROOT_DIR/env.js" <<JS
// generated by build-env.sh
window.IBG = {
  PAYPAL_CLIENT_ID: "${PAYPAL_CLIENT_ID}",
  PAYPAL_SECRET: "${PAYPAL_SECRET}",
  PAYPAL_PLAN_MONTHLY_1499: "${PAYPAL_PLAN_MONTHLY_1499}",
  PAYPAL_PLAN_ANNUAL_4999: "${PAYPAL_PLAN_ANNUAL_4999}",
  PAYPAL_WEBHOOK_ID: "${PAYPAL_WEBHOOK_ID}",
  CRISP_WEBSITE_ID: "${CRISP_WEBSITE_ID}",
  EXOCLICK_ZONE: "${EXOCLICK_ZONE}",
  JUICYADS_ZONE: "${JUICYADS_ZONE}",
  EROADVERTISING_ZONE: "${EROADVERTISING_ZONE}",
  EXOCLICK_SNIPPET_B64: "${EXOCLICK_SNIPPET_B64}",
  JUICYADS_SNIPPET_B64: "${JUICYADS_SNIPPET_B64}",
  EROADVERTISING_SNIPPET_B64: "${EROADVERTISING_SNIPPET_B64}",
  POPADS_SITE_ID: "${POPADS_SITE_ID}",
  POPADS_ENABLE: "${POPADS_ENABLE}",
  IBG_ASSETS_BASE_URL: "${IBG_ASSETS_BASE_URL}",
  CURRENCY: "EUR"
};
JS

# por si qued√≥ un env.js viejo en tools/, lo eliminamos
rm -f "$ROOT_DIR/tools/env.js"

# por si alguien meti√≥ 'export' accidentalmente, lo limpiamos (macOS sed)
sed -i "" -e '1s/^export[[:space:]]\+//' "$ROOT_DIR/env.js" || true

echo "‚úÖ env.js escrito en ra√≠z (sin export)"
BASH
chmod +x tools/build-env.sh
bash tools/build-env.sh

# 1) Asegurar import correcto de i18n en pages-common (evita 404)
if [ -f js/pages-common.js ]; then
  sed -i "" -e 's#\.\./i18n\.js#\./i18n.js#g' js/pages-common.js || true
fi

# 2) CSS HOME sin @font-face ni rutas a decorative-images (evita 404)
mkdir -p css
cat > css/ibg-home.css <<'CSS'
:root{--gap:12px;--radius:18px;--badge:#ff3366;--shellMax:1280px;--sideAdW:160px}
*{box-sizing:border-box}
body{margin:0;background:#0e1b26;color:#fff;font-family:-apple-system,Segoe UI,Roboto,Inter,system-ui,sans-serif}
.page-shell{position:relative;max-width:var(--shellMax);margin:0 auto;z-index:2}
.header{position:sticky;top:0;z-index:5;background:rgba(0,0,0,.45);backdrop-filter:saturate(140%) blur(8px);padding:10px 12px;display:flex;gap:12px;align-items:center}
.header a{color:#fff;text-decoration:none;padding:.45rem .7rem;border-radius:999px;background:#16344a;white-space:nowrap}
.header .lang{margin-left:auto}
.hero{position:relative;overflow:hidden}
.hero-bg{width:100%;height:44vh;min-height:280px;max-height:520px;object-fit:cover;display:block;filter:saturate(1.05) contrast(1.03)}
.hero-overlay{position:absolute;inset:0;background:linear-gradient(180deg,rgba(7,16,25,.25),rgba(7,16,25,.85))}
.hero-title{position:absolute;left:12px;bottom:14px;font-size:clamp(24px,5vw,44px);font-weight:800}
.hero-sub{position:absolute;left:12px;bottom:14px;transform:translateY(120%);opacity:.9;font-size:clamp(14px,2.2vw,18px)}
.carousel{position:relative;overflow:hidden;margin:12px}
.carousel-track{display:flex;gap:10px;scroll-snap-type:x mandatory;overflow-x:auto;padding-bottom:8px}
.carousel .slide{min-width:320px;max-width:70vw;height:220px;scroll-snap-align:start;border-radius:var(--radius);overflow:hidden}
.grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));gap:var(--gap);padding:12px}
.card{position:relative;border-radius:var(--radius);overflow:hidden;background:#0a1320}
.card img{width:100%;height:220px;object-fit:cover;display:block}
.badge{position:absolute;top:8px;left:8px;background:var(--badge);color:#fff;font-weight:700;padding:4px 8px;border-radius:999px;font-size:12px}
.small{font-size:12px;opacity:.85}
.side-ad{position:fixed;top:0;bottom:0;width:var(--sideAdW);z-index:1;display:none;align-items:center;justify-content:center;pointer-events:auto}
.side-ad.left{left:0} .side-ad.right{right:0}
@media (min-width:1460px){ .side-ad{display:flex} .page-shell{margin-left:var(--sideAdW);margin-right:var(--sideAdW)} }
CSS

# 3) HOME: banner desde tu pool p√∫blico (banners), sin probar im√°genes decorativas (evita 404)
cat > js/pages/home.js <<'JS'
import { t } from '../i18n.js';
import { getDaily } from '../daily-picks.js';

function pickBannerFromPool(){
  try{
    const U = window.UnifiedContentAPI;
    if (U && U.getPublicImages) {
      const all = U.getPublicImages();
      const banners = all.filter(x => x.isBanner || /banner/i.test(x?.tag||'') || /banner/i.test(x?.type||''));
      if (banners.length) return banners[Math.floor(Math.random()*banners.length)];
      return all[0] || null;
    }
  }catch(_){}
  return null;
}

export async function initHome(){
  const root=document.getElementById('app');
  root.innerHTML = `
    <section class="hero" id="hero">
      <img class="hero-bg" id="heroImg" alt="">
      <div class="hero-overlay"></div>
      <div class="hero-title">IbizaGirl.pics</div>
      <div class="hero-sub">Exclusive mediterranean vibes</div>
    </section>
    <div id="menuMount"></div>
    <h2 style="padding:10px 12px">${t('home')}</h2>
    <section class="carousel"><div class="carousel-track" id="homeCarousel"></div></section>
    <section class="grid" id="homeGrid"></section>
  `;

  // Banner sin 404: usa contenido real
  const b = pickBannerFromPool();
  const heroImg = document.getElementById('heroImg');
  const bUrl = b?.banner || b?.cover || b?.thumb || b?.src || b?.file || b?.url || b?.path;
  if (bUrl) heroImg.src = bUrl;

  // Carrusel + 20 im√°genes de /full
  const {home20} = getDaily();
  const car=document.getElementById('homeCarousel');
  home20.forEach(it=>{
    const u=it.banner||it.cover||it.thumb||it.src||it.file||it.url||it.path;
    const s=document.createElement('div'); s.className='slide'; s.innerHTML=`<img src="${u}" alt="">`; car.appendChild(s);
  });
  const grid=document.getElementById('homeGrid');
  home20.forEach((it,i)=>{
    const id=it.id||it.file||`full-${i}`; const u=it.thumb||it.src||it.file||it.url||it.path;
    const c=document.createElement('div'); c.className='card'; c.dataset.id=id; c.innerHTML=`<img loading="lazy" src="${u}" alt="">`; grid.appendChild(c);
  });
}
JS

# 4) bootstrap-ibg: env√≠a HOME primero contenido y luego header; quitar decorativos; ad loader intacto
cat > js/bootstrap-ibg.js <<'JS'
import { mountHeader } from './pages-common.js';
import { initHome } from './pages/home.js';
import { initPremium } from './pages/premium.js';
import { initVideos } from './pages/videos.js';
import { initSubscription } from './pages/subscription.js';
import { initAds } from './ad-loader.js';
import { initCrisp } from './integrations.js';

(async ()=>{
  const path = (location.pathname.replace(/\/+$/,'') || '/index.html');

  if(path.endsWith('/index.html')){
    await initHome();
    mountHeader();
  } else {
    mountHeader();
    if(path.endsWith('/premium.html')){ await initPremium(); }
    else if(path.endsWith('/videos.html')){ await initVideos(); }
    else if(path.endsWith('/subscription.html')){ await initSubscription(); }
  }

  initCrisp();
  initAds({ left: document.getElementById('ad-left'), right: document.getElementById('ad-right') });
})();
JS

# 5) index.html: sin referencias a decorative-images; a√±ade contenedores de anuncios laterales
cat > index.html <<'HTML'
<!doctype html><html lang="es"><head>
<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
<title>IBIZAGIRL.PICS ‚Äî Home</title>
<link rel="stylesheet" href="/css/ibg.css">
<link rel="stylesheet" href="/css/ibg-home.css">
<script src="/env.js"></script>
<script src="/content-data1.js"></script>
<script src="/content-data2.js"></script>
<script src="/content-data3.js"></script>
<script src="/content-data4.js"></script>
<script src="/content-data5.js"></script>
<script src="/content-data6.js"></script>
</head><body>
<aside id="ad-left" class="side-ad left"></aside>
<aside id="ad-right" class="side-ad right"></aside>
<div class="page-shell" id="shell">
  <div id="app"></div>
</div>
<script type="module" src="/js/i18n.js"></script>
<script type="module" src="/js/bootstrap-ibg.js"></script>
</body></html>
HTML

# 6) vercel.json para ejecutar build-env en cada deploy
if [ ! -f vercel.json ]; then
  cat > vercel.json <<'JSON'
{
  "framework": "other",
  "buildCommand": "bash tools/build-env.sh",
  "outputDirectory": "."
}
JSON
fi

# 7) Commit + push
git add -A
git commit -m "IBG HOME clean: env.js (no export), no decorative 404, banner from pool" || true
git push origin main || true

# 8) Deploy a producci√≥n (con npx para evitar instalaci√≥n global)
npx -y vercel --prod --yes | tee .last_vercel_home_clean.txt

URL="$(grep -Eo 'https://[a-z0-9.-]+\.vercel\.app' .last_vercel_home_clean.txt | tail -n1 || true)"
if [ -n "$URL" ]; then
  echo "‚úÖ Deploy URL: $URL"
  printf "HEAD /env.js -> "; curl -sI "$URL/env.js" | head -n1
  printf "HEAD /js/bootstrap-ibg.js -> "; curl -sI "$URL/js/bootstrap-ibg.js" | head -n1
  echo "üîÑ Abre en inc√≥gnito y recarga forzada: $URL/index.html"
else
  echo "‚ö†Ô∏è No pude detectar URL del deploy; revisa la salida del CLI arriba."
fi

echo "‚úîÔ∏è HOME limpia lista"
