name: Deploy stable to Production

on:
  push:
    branches: [ stable ]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # Vercel
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      TEAM_SLUG: oriols-projects-ed6b9b04
      # Build
      NODE_VERSION: 20.11.1
      # Dominios
      DOMAIN_A: ibizagirl.pics
      DOMAIN_W: www.ibizagirl.pics

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Write Vercel auth + project settings
        run: |
          mkdir -p ~/.vercel .vercel
          printf '{ "token": "%s" }\n' "${VERCEL_TOKEN}" > ~/.vercel/auth.json
          printf '{ "orgId": "%s", "projectId": "%s" }\n' "${VERCEL_ORG_ID}" "${VERCEL_PROJECT_ID}" > .vercel/project.json
          echo "== .vercel/project.json ==" && cat .vercel/project.json

      - name: Debug whoami / projects
        run: |
          vercel --version
          vercel whoami || true
          vercel projects ls --scope "${TEAM_SLUG}" | head -n 20 || true

      - name: Pull env (production, non-blocking)
        continue-on-error: true
        run: vercel env pull --environment=production --yes

      - name: Install deps (lockfile aware)
        run: |
          if [ -f package-lock.json ]; then
            npm ci || npm install --no-audit --no-fund
          elif [ -f pnpm-lock.yaml ]; then
            npm i -g pnpm && (pnpm i --frozen-lockfile || pnpm i)
          elif [ -f yarn.lock ]; then
            corepack enable && (yarn install --frozen-lockfile || yarn install)
          else
            npm install --no-audit --no-fund
          fi

      - name: Build prebuilt (Vercel)
        run: vercel build --prod --yes

      - name: Deploy prebuilt â†’ Production
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --prod --yes | awk '/https:\/\/.*\.vercel\.app/ {print $1; exit}')
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Deploy URL: $URL"

      - name: Alias domains (non-blocking)
        if: steps.deploy.outputs.url != ''
        continue-on-error: true
        run: |
          vercel alias set "${{ steps.deploy.outputs.url }}" "${{ env.DOMAIN_A }}"
          vercel alias set "${{ steps.deploy.outputs.url }}" "${{ env.DOMAIN_W }}"

      - name: Tag & Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TS=$(date +'%Y%m%d-%H%M%S')
          git tag -a "stable-${TS}" -m "Production deploy @ ${TS}" || true
          git push origin --tags || true
