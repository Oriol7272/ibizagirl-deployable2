name: deploy-stable
on:
  push:
    branches: [stable]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Node + Vercel CLI
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm i -g vercel@latest

      - name: Sanity VERCEL_TOKEN
        run: |
          L=$(printf %s "${VERCEL_TOKEN:-}" | wc -c | tr -d ' ')
          if [ "$L" -lt 20 ]; then
            echo "::error::VERCEL_TOKEN vacío o demasiado corto (len=$L). Define el secret en GitHub → Settings → Secrets → Actions."
            exit 1
          fi

      - name: Whoami (con token)
        run: |
          U=$(vercel whoami --token "$VERCEL_TOKEN" 2>/dev/null | tr -d '\r')
          echo "whoami=$U"
          [ -n "$U" ] || { echo "::error::El token no autenticó contra Vercel (whoami vacío)."; exit 1; }

      - name: Comprobar .vercel/project.json
        run: |
          if [ ! -f ".vercel/project.json" ]; then
            echo "::error::.vercel/project.json no existe. Ejecuta en local:
            vercel link --yes --project \"ibizagirl-deployable2\" --scope \"oriols-projects-ed6b9b04\"
            y sube el archivo."
            exit 1
          fi
          echo "OK: .vercel/project.json presente"

      - name: Pull env (no bloqueante)
        run: vercel env pull --yes --environment=production --token "$VERCEL_TOKEN" || true

      - name: Deploy (cloud build + debug)
        id: deploy
        run: |
          set -o pipefail
          OUT=$(vercel deploy --prod --yes --token "$VERCEL_TOKEN" --debug | tee /tmp/vercel.out)
          URL=$(echo "$OUT" | awk '/https:\/\/[^ ]+\.vercel\.app/ {print $1; exit}')
          if [ -z "$URL" ]; then
            echo "::group::Vercel raw output"
            tail -n +1 /tmp/vercel.out || true
            echo "::endgroup::"
            echo "::error::No obtuve URL de deploy"
            exit 1
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Deploy URL: $URL"

      - name: Alias (best-effort)
        if: steps.deploy.outputs.url != ''
        run: |
          vercel alias set "${{ steps.deploy.outputs.url }}" ibizagirl.pics --token "$VERCEL_TOKEN" || true
          vercel alias set "${{ steps.deploy.outputs.url }}" www.ibizagirl.pics --token "$VERCEL_TOKEN" || true

      - name: Git identity (for tagging)
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - name: Tag release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TS=$(date +'%Y%m%d-%H%M%S'); TAG="stable-$TS"
          git tag -a "$TAG" -m "Deploy stable @ $TS"
          git push origin "$TAG"
