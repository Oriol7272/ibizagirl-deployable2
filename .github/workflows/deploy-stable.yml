name: deploy-stable
on:
  push:
    branches: [stable]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Node + Vercel CLI
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm i -g vercel@latest

      - name: Sanity VERCEL_TOKEN
        run: |
          if [ -z "${VERCEL_TOKEN:-}" ] || [ "${#VERCEL_TOKEN}" -lt 20 ]; then
            echo "::error::VERCEL_TOKEN vacío o demasiado corto. Defínelo en GitHub → Settings → Secrets → Actions."
            exit 1
          fi

      - name: Auth (usa token) y project.json
        run: |
          mkdir -p "$HOME/.vercel"
          printf '{"token":"%s"}\n' "$VERCEL_TOKEN" > "$HOME/.vercel/auth.json"
          if [ ! -f ".vercel/project.json" ]; then
            echo "::error::.vercel/project.json no existe. Ejecuta 'vercel link --project ibizagirl-deployable2 --scope oriols-projects-ed6b9b04' en local y súbelo."
            exit 1
          fi

      - name: Deploy (cloud build)
        id: deploy
        run: |
          URL=$(vercel deploy --prod --yes | awk '/https:\/\/[^ ]+\.vercel\.app/ {print $1; exit}')
          if [ -z "$URL" ]; then
            echo "::error::No obtuve URL de deploy"
            exit 1
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Deploy URL: $URL"

      - name: Alias (best-effort)
        if: steps.deploy.outputs.url != ''
        run: |
          vercel alias set "${{ steps.deploy.outputs.url }}" ibizagirl.pics || true
          vercel alias set "${{ steps.deploy.outputs.url }}" www.ibizagirl.pics || true

      - name: Tag release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TS=$(date +'%Y%m%d-%H%M%S'); TAG="stable-$TS"
          git tag -a "$TAG" -m "Deploy stable @ $TS"
          git push origin "$TAG"
