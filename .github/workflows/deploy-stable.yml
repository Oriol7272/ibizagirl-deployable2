name: Deploy stable to Production
on:
  push:
    branches: [ stable ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      NODE_VERSION: 20.11.1
      PROJECT_NAME: ibizagirl-deployable2
      DOMAIN_A: ibizagirl.pics
      DOMAIN_W: www.ibizagirl.pics
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Vercel Pull (prod env)
        run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN"

      - name: Install deps (ci)
        run: |
          if [ -f package-lock.json ]; then npm ci; fi

      - name: Build prebuilt (vercel)
        run: vercel build --prod --token="$VERCEL_TOKEN"

      - name: Deploy prebuilt â†’ Production
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN" | awk '/https:\/\/.*\.vercel\.app/ {print $1; exit}')
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Deploy URL: $URL"

      - name: Alias domains
        if: steps.deploy.outputs.url != ''
        run: |
          vercel alias set "${{ steps.deploy.outputs.url }}" "$DOMAIN_A" --token="$VERCEL_TOKEN" || true
          vercel alias set "${{ steps.deploy.outputs.url }}" "$DOMAIN_W" --token="$VERCEL_TOKEN" || true

      - name: Tag & Release
        if: steps.deploy.outputs.url != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TS=$(date +'%Y%m%d-%H%M%S')
          TAG="rel-${TS}"
          git tag -a "$TAG" -m "Production deploy from stable @ ${TS}"
          git push origin "$TAG"
